/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import relatorios.RelatorioConferencia;
import utilitarios.ConectaBanco;
import utilitarios.ImpressaoComandaBalcao;
import utilitarios.ImpressaoComandaCompleta;
import utilitarios.ImpressaoComandaCozinha;
import utilitarios.ImpressaoCupom;
import utilitarios.ModeloTabela;

/**
 *
 * @author Gabriel Bastos
 */
public class TerminalPreVenda extends javax.swing.JFrame {
    
    String vlrUnit;
    boolean preVendaAtiva;
    float subtotal=0;
    DefaultListModel MODELO;
    String [] codig;
    int enter = 0;

   ConectaBanco conecta = new ConectaBanco();
   ConectaBanco conecta1 = new ConectaBanco();
    public TerminalPreVenda() {
        initComponents();
        conecta.conexao();
        conecta1.conexao();
        jButtonImprimirComandaCozinha.setEnabled(false);
        jButtonImprimirComandaBalcao.setEnabled(false);
        jButtonImprimirComandaCompleta.setEnabled(false);
        jButtonFecharPreVenda.setEnabled(false);
        jButtonAddItem.setEnabled(false);
        jTextFieldQtde.setText("1");
          MODELO = new DefaultListModel();
        jListMostraDados.setModel(MODELO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldCodMesa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldFuncod = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldProcod = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldQtde = new javax.swing.JTextField();
        jButtonAddItem = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableItens = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabelValorTotal = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabelNomeFunc = new javax.swing.JLabel();
        jLabelDescricaoProd = new javax.swing.JLabel();
        jLabelDescricaoMesa = new javax.swing.JLabel();
        jButtonImprimirComandaCozinha = new javax.swing.JButton();
        jButtonFecharPreVenda = new javax.swing.JButton();
        jButtonConsultarComanda = new javax.swing.JButton();
        jButtonImprimirComandaCompleta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jListMostraDados = new javax.swing.JList<>();
        jTextFieldPesquisaNome = new javax.swing.JTextField();
        jButtonConferencia = new javax.swing.JButton();
        jButtonImprimirComandaBalcao = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PRÉ-VENDA **** REGISTRO DE CONSUMO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mesa");

        jTextFieldCodMesa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldCodMesa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldCodMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodMesaActionPerformed(evt);
            }
        });
        jTextFieldCodMesa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodMesaKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Funcionário");

        jTextFieldFuncod.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldFuncod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldFuncod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFuncodActionPerformed(evt);
            }
        });
        jTextFieldFuncod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldFuncodKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("<< Consulta por Descrição >>");

        jTextFieldProcod.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldProcod.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldProcod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProcodActionPerformed(evt);
            }
        });
        jTextFieldProcod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldProcodKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Quantidade");

        jTextFieldQtde.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldQtde.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldQtde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQtdeActionPerformed(evt);
            }
        });
        jTextFieldQtde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQtdeKeyPressed(evt);
            }
        });

        jButtonAddItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/if_199_CircledPlus_183316.png"))); // NOI18N
        jButtonAddItem.setText("Adicionar");
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });
        jButtonAddItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonAddItemKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("---Itens---");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESA", "FUNCIONÁRIO", "CÓDIGO", "DESCRIÇÃO", "UNITÁRIO", "QTDE", "TOTAL"
            }
        ));
        jTableItens.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableItensKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableItens);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Subtotal");

        jLabelValorTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelValorTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/if_lollypop-lollipop.png"))); // NOI18N
        jLabel12.setText("G20PDV -- Food Service Management");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/logo-botecaria.jpeg"))); // NOI18N

        jLabelNomeFunc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelNomeFunc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelDescricaoProd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelDescricaoProd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelDescricaoMesa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelDescricaoMesa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonImprimirComandaCozinha.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonImprimirComandaCozinha.setText("Comanda P/ Cozinha (F9)");
        jButtonImprimirComandaCozinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirComandaCozinhaActionPerformed(evt);
            }
        });

        jButtonFecharPreVenda.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonFecharPreVenda.setText("Fechar Pré-Venda (F7)");
        jButtonFecharPreVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFecharPreVendaActionPerformed(evt);
            }
        });

        jButtonConsultarComanda.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonConsultarComanda.setText("Consultar Pré-Venda Aberta (F8)");
        jButtonConsultarComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarComandaActionPerformed(evt);
            }
        });

        jButtonImprimirComandaCompleta.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonImprimirComandaCompleta.setText("Comanda P/ Mesa (F10)");
        jButtonImprimirComandaCompleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirComandaCompletaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Produto");

        jListMostraDados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jListMostraDados.setPreferredSize(new java.awt.Dimension(2, 16));
        jListMostraDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListMostraDadosMousePressed(evt);
            }
        });
        jListMostraDados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListMostraDadosKeyPressed(evt);
            }
        });

        jTextFieldPesquisaNome.setFont(new java.awt.Font("SFNS Display", 0, 11)); // NOI18N
        jTextFieldPesquisaNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldPesquisaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisaNomeActionPerformed(evt);
            }
        });
        jTextFieldPesquisaNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisaNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisaNomeKeyReleased(evt);
            }
        });

        jButtonConferencia.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonConferencia.setText("Conferência (F11)");
        jButtonConferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConferenciaActionPerformed(evt);
            }
        });

        jButtonImprimirComandaBalcao.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonImprimirComandaBalcao.setText("Comanda P/ Balcão (F12)");
        jButtonImprimirComandaBalcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirComandaBalcaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextFieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButtonAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jTextFieldCodMesa, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                                                        .addComponent(jTextFieldFuncod))
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addComponent(jLabelNomeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                            .addGap(8, 8, 8)
                                                            .addComponent(jLabelDescricaoMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addComponent(jTextFieldProcod)))
                                        .addComponent(jLabelDescricaoProd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(173, 173, 173)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextFieldPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jListMostraDados, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(133, 133, 133)))
                                .addComponent(jLabel13)))
                        .addGap(145, 145, 145))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(357, 357, 357))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonFecharPreVenda)
                        .addGap(2, 2, 2)
                        .addComponent(jButtonConsultarComanda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonImprimirComandaCozinha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonImprimirComandaCompleta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonConferencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonImprimirComandaBalcao)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(491, 491, 491)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jTextFieldFuncod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabelNomeFunc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabelDescricaoMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCodMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldProcod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelDescricaoProd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonAddItem)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldQtde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldPesquisaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jListMostraDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFecharPreVenda)
                    .addComponent(jButtonImprimirComandaCozinha)
                    .addComponent(jButtonConsultarComanda)
                    .addComponent(jButtonImprimirComandaCompleta)
                    .addComponent(jButtonConferencia)
                    .addComponent(jButtonImprimirComandaBalcao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.getAccessibleContext().setAccessibleName("PRÉ-VENDA *** REGISTRO DE CONSUMO");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodMesaActionPerformed

    private void jTextFieldFuncodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFuncodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFuncodActionPerformed

    private void jTextFieldProcodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProcodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProcodActionPerformed

    private void jTextFieldQtdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQtdeActionPerformed
         
    }//GEN-LAST:event_jTextFieldQtdeActionPerformed

    private void jTextFieldFuncodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFuncodKeyPressed
         if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
             
            
            conecta.executaSQL("SELECT * FROM FUNCIONARIO WHERE FUNCOD='"+jTextFieldFuncod.getText()+"'");
            
             try {
                 if(conecta.rs.next()){
                     jLabelNomeFunc.setText(conecta.rs.getString("NOME_FUNCIONARIO"));
                     jTextFieldFuncod.setEnabled(false);
                     jTextFieldCodMesa.requestFocusInWindow();
                     
                     
                     
                     
                     
                     
                 } else {
                     JOptionPane.showMessageDialog(null, "Funcionário não cadastrado!");
                     
                     
                 }} catch (SQLException ex) {
                 Logger.getLogger(TerminalPreVenda.class.getName()).log(Level.SEVERE, null, ex);
             }
            
            
        } else if(evt.getKeyCode() == KeyEvent.VK_F8){
                   jButtonConsultarComanda.doClick();
        }
        if(evt.getKeyCode() == KeyEvent.VK_F7){
            jButtonFecharPreVenda.doClick();

        }
        if(evt.getKeyCode() == KeyEvent.VK_F9){
                   jButtonImprimirComandaCozinha.doClick();
        } 
        if(evt.getKeyCode() == KeyEvent.VK_F10){
                   jButtonImprimirComandaCompleta.doClick();
        }
        if(evt.getKeyCode() == KeyEvent.VK_F11){
                   jButtonConferencia.doClick();
        }
        if(evt.getKeyCode() == KeyEvent.VK_F12){
                   jButtonImprimirComandaBalcao.doClick();
        }
        
    }//GEN-LAST:event_jTextFieldFuncodKeyPressed

    private void jTextFieldCodMesaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodMesaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
             String numero = jTextFieldCodMesa.getText();
            final String ZEROS = "0000";
            String s = String.valueOf(numero);
            String novoNumero = ZEROS.substring(s.length()) + s;   
            jTextFieldCodMesa.setText(novoNumero);
            
              conecta.executaSQL("SELECT * FROM CONSUMO WHERE MESA='"+jTextFieldCodMesa.getText()+"'");
                try {
                   if(conecta.rs.next()){
                    JOptionPane.showMessageDialog(rootPane,"Já existe consumo para a mesa indicada!");
            
                            }else{
                       
                       
                       conecta.executaSQL("SELECT * FROM MESA WHERE COD_MESA='"+jTextFieldCodMesa.getText()+"'");
            
            try {
                
                if(conecta.rs.next()){
                    jLabelDescricaoMesa.setText(conecta.rs.getString("DESCRICAO_MESA"));
                    jTextFieldCodMesa.setEnabled(false);
                    jTextFieldPesquisaNome.requestFocusInWindow();
       
                    
                    
                    
                } else {
                        JOptionPane.showMessageDialog(null, "Mesa não cadastrada!");
                         
        
                        }
            } catch (SQLException ex) {
                Logger.getLogger(FrmMesa.class.getName()).log(Level.SEVERE, null, ex);
            }
                       
                       
                       
                   }
                       
                   
                    } catch (SQLException ex) {
                Logger.getLogger(FrmMesa.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            
            
        }
        
        
    }//GEN-LAST:event_jTextFieldCodMesaKeyPressed

    private void jTextFieldProcodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldProcodKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
             String numero = jTextFieldProcod.getText();
            final String ZEROS = "00000000000000";
            String s = String.valueOf(numero);
            String novoNumero = ZEROS.substring(s.length()) + s;   
            jTextFieldProcod.setText(novoNumero);
            
            conecta.executaSQL("SELECT * FROM PRODUTO WHERE PROCOD='"+jTextFieldProcod.getText()+"'");
            
            try {
                
                if(conecta.rs.next()){
                    jLabelDescricaoProd.setText(conecta.rs.getString("PRODES"));
                    vlrUnit=conecta.rs.getString("proprc1");
                    
                    jTextFieldQtde.setText("1");
                    jTextFieldQtde.requestFocusInWindow();
                    jButtonAddItem.setEnabled(true);
                    
                } else {
                        JOptionPane.showMessageDialog(null, "Produto não cadastrado!");
                         
        
                        }
            } catch (SQLException ex) {
                Logger.getLogger(FrmProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        } else if(evt.getKeyCode() == KeyEvent.VK_F7){
                   jButtonFecharPreVenda.doClick();
        } else if(evt.getKeyCode() == KeyEvent.VK_F9){
                   jButtonImprimirComandaCozinha.doClick();
        } else if(evt.getKeyCode() == KeyEvent.VK_F10){
                   jButtonImprimirComandaCompleta.doClick();
        }
        
       
    }//GEN-LAST:event_jTextFieldProcodKeyPressed

    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
       
        float vlrUnitario = Float.parseFloat(vlrUnit);
        float qtde = Float.parseFloat(jTextFieldQtde.getText());
    
        float vlrTotal = vlrUnitario * qtde;
        String vlrTotalString = Float.toString(vlrTotal);
        
        preencherTabela(jTextFieldCodMesa.getText(),jLabelNomeFunc.getText(),jTextFieldProcod.getText(),jLabelDescricaoProd.getText(),vlrUnit,jTextFieldQtde.getText(),vlrTotalString);
            PreparedStatement pst;
            
        try {
            pst = conecta.conn.prepareStatement("INSERT INTO consumo (mesa, procod_pre, quantidade_pre, funcod_pre, nomefunc_pre, prodes_pre, precounit_pre)values(?,?,?,?,?,?,?)"); //passagem do sql a ser executado
            pst.setInt(1, Integer.parseInt(jTextFieldCodMesa.getText()));
            pst.setString(2, jTextFieldProcod.getText());// passagem dos parametros
            pst.setFloat(3, Float.parseFloat(jTextFieldQtde.getText()));
            pst.setInt(4, Integer.parseInt(jTextFieldFuncod.getText()));
            pst.setString(5, jLabelNomeFunc.getText());
            pst.setString(6, jLabelDescricaoProd.getText());
            pst.setFloat(7, Float.parseFloat(vlrUnit));
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(TerminalPreVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextFieldProcod.setText("");
        jTextFieldQtde.setText("");
        jLabelDescricaoProd.setText("");
        jTextFieldPesquisaNome.requestFocusInWindow();
        jButtonImprimirComandaCompleta.setEnabled(true);
        jButtonImprimirComandaCozinha.setEnabled(true);
        jButtonImprimirComandaBalcao.setEnabled(true);
        jButtonFecharPreVenda.setEnabled(true);
        jButtonConsultarComanda.setEnabled(false);
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void jButtonFecharPreVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFecharPreVendaActionPerformed
       JOptionPane.showMessageDialog(rootPane, "Comanda fechada com sucesso!");
       jTextFieldCodMesa.setText("");
       jTextFieldFuncod.setText("");
       jTextFieldProcod.setText("");
       jTextFieldQtde.setText("");
       jButtonImprimirComandaCompleta.setEnabled(false);
       jButtonImprimirComandaCozinha.setEnabled(false);
       jButtonImprimirComandaBalcao.setEnabled(false);
       
       jLabelDescricaoMesa.setText("");
       jLabelDescricaoProd.setText("");
       jLabelNomeFunc.setText("");
       jLabelValorTotal.setText("");
       jTextFieldFuncod.requestFocusInWindow();
       jTextFieldCodMesa.setEnabled(true);
       jTextFieldFuncod.setEnabled(true);
       jButtonConsultarComanda.setEnabled(true);
       jButtonFecharPreVenda.setEnabled(false);
       DefaultTableModel modelo = (DefaultTableModel) jTableItens.getModel();
       modelo.setRowCount(0);
       subtotal = 0;
       
    }//GEN-LAST:event_jButtonFecharPreVendaActionPerformed

    private void jButtonConsultarComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarComandaActionPerformed
                 
        
        jTextFieldCodMesa.setText("");
       jTextFieldFuncod.setText("");
       jTextFieldProcod.setText("");
       jTextFieldQtde.setText("");
       
       jLabelDescricaoMesa.setText("");
       jLabelDescricaoProd.setText("");
       jLabelNomeFunc.setText("");
       jLabelValorTotal.setText("");
       DefaultTableModel modelo = (DefaultTableModel) jTableItens.getModel();
                    modelo.setRowCount(0);
                     subtotal=0;
       
       String consulta=JOptionPane.showInputDialog(rootPane, "DIGITE O NÚMERO DA MESA");
       
            conecta.executaSQL("SELECT * FROM consumo WHERE mesa='"+consulta+"'");
            
            try {
                
                //if(conecta.rs.next()){
                   
                    modelo.setRowCount(0);
                    while(conecta.rs.next()){
                   
                    
                    System.out.println("teste");
                    
                   
                   jLabelDescricaoMesa.setText("MESA "+(Integer.toString(conecta.rs.getInt("mesa"))));
                    jTextFieldCodMesa.setText(Integer.toString(conecta.rs.getInt("mesa")));
                    jTextFieldFuncod.setText(Integer.toString(conecta.rs.getInt("funcod_pre")));
                    jTextFieldProcod.setText(conecta.rs.getString("procod_pre"));
                    jTextFieldQtde.setText(Float.toString(conecta.rs.getFloat("quantidade_pre")));
       
                   jLabelNomeFunc.setText(conecta.rs.getString("nomefunc_pre"));
                   jLabelDescricaoProd.setText(conecta.rs.getString("prodes_pre"));
                   //preencherTabela();
                   jLabelValorTotal.setText("");
                    float vlrUnitario = conecta.rs.getFloat("precounit_pre");
                    
                    float qtde = Float.parseFloat(jTextFieldQtde.getText());
    
        float vlrTotal = vlrUnitario * qtde;
                String vlrTotalString = Float.toString(vlrTotal);
                String vlrUnitString = Float.toString(vlrUnitario);  
                   preencherTabela(jTextFieldCodMesa.getText(),jLabelNomeFunc.getText(),jTextFieldProcod.getText(),jLabelDescricaoProd.getText(),vlrUnitString,jTextFieldQtde.getText(),vlrTotalString);
                    jButtonFecharPreVenda.setEnabled(true);
                    jButtonImprimirComandaCompleta.setEnabled(true);
                    jButtonImprimirComandaCozinha.setEnabled(true);
                    jButtonImprimirComandaBalcao.setEnabled(true);
                    jTextFieldProcod.selectAll();
                    jTextFieldProcod.requestFocus();
       
      
                    }
                    
                    
                    
                    
               // } else {
                    //    JOptionPane.showMessageDialog(null, "Não há consumo para a mesa informada!");
                         
        
                      //  }
            } catch (SQLException ex) {
                Logger.getLogger(FrmProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        
            
       
    }//GEN-LAST:event_jButtonConsultarComandaActionPerformed

   
    
    private void jButtonImprimirComandaCozinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirComandaCozinhaActionPerformed
        int mesaEnviada=Integer.parseInt(jTextFieldCodMesa.getText());
        ImpressaoComandaCozinha impressaoComandaCozinha = new ImpressaoComandaCozinha(mesaEnviada);
        System.out.println(mesaEnviada);
    }//GEN-LAST:event_jButtonImprimirComandaCozinhaActionPerformed

    private void jButtonImprimirComandaCompletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirComandaCompletaActionPerformed
          int mesaEnviada=Integer.parseInt(jTextFieldCodMesa.getText());
        ImpressaoComandaCompleta impressaoComandaCompleta = new ImpressaoComandaCompleta(mesaEnviada);
        System.out.println(mesaEnviada);
    }//GEN-LAST:event_jButtonImprimirComandaCompletaActionPerformed

    private void jTextFieldQtdeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQtdeKeyPressed
            if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jButtonAddItem.doClick();
         } else if(evt.getKeyCode() == KeyEvent.VK_F7){
                   jButtonFecharPreVenda.doClick();
        }
            
    }//GEN-LAST:event_jTextFieldQtdeKeyPressed

    
    
    private void jButtonAddItemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAddItemKeyPressed
              
    }//GEN-LAST:event_jButtonAddItemKeyPressed

    private void jTableItensKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableItensKeyPressed
        DefaultTableModel dtm = (DefaultTableModel)jTableItens.getModel();
        int row = jTableItens.getSelectedRow();
        if(evt.getKeyCode() == KeyEvent.VK_DELETE){
             
            
            
             if (jTableItens.getSelectedRow() >= 0){
             
            conecta.executaSQL("DELETE FROM consumo WHERE MESA='"+jTableItens.getValueAt(row, 0).toString()+
                                           "' AND NOMEFUNC_PRE='"+jTableItens.getValueAt(row, 1).toString()+
                                              "' AND PROCOD_PRE='"+jTableItens.getValueAt(row, 2).toString()+
                                              "' AND PRODES_PRE='"+jTableItens.getValueAt(row, 3).toString()+
                                          "' AND QUANTIDADE_PRE='"+jTableItens.getValueAt(row, 5).toString()+
                                              "'");
            
           
           String valorSubtraidoString = jTableItens.getValueAt(row, 6).toString();
            float valorSubtraido = Float.parseFloat(valorSubtraidoString.replace("R$ ", "").replace(",","."));
            
            
            
            subtotal = subtotal - valorSubtraido;
            jLabelValorTotal.setText(NumberFormat.getCurrencyInstance().format(subtotal));
            
           
            dtm.removeRow(jTableItens.getSelectedRow());
            jTableItens.setModel(dtm);
            
        }else{
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
        } 
            
            
//            JPasswordField password = new JPasswordField(10);
//		password.setEchoChar('*'); 
//		// Cria um rótulo para o campo
//		JLabel rotulo = new JLabel("Digite a senha para cancelamento:");
//		// Coloca o rótulo e a caixa de entrada numa JPanel:
//		JPanel entUsuario = new JPanel();
//		entUsuario.add(rotulo);
//		entUsuario.add(password);
//		// Mostra o rótulo e a caixa de entrada de password para o usuario fornecer a senha:
//		JOptionPane.showMessageDialog(null, entUsuario, "Acesso restrito", JOptionPane.PLAIN_MESSAGE);
//		// O programa só prossegue quando o usuário clicar o botao de OK do showMessageDialog. 
//		// Aí, é só pegar a senha:
//		// Captura a senha:
//		String senhaDigitada = password.getText();
//            
//            
//            
//            String senhaCancel = "";
//            
//            conecta.executaSQL("SELECT SENHA FROM ACESSO_CANCELAMENTO");
//            try {
//                if (conecta.rs.next()){
//                    senhaCancel = conecta.rs.getString("senha");
//                }
//                
//            } catch (SQLException ex) {
//                Logger.getLogger(TerminalPreVenda.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            
//             if (senhaDigitada.equals(senhaCancel)){
//                 
//                 if (jTableItens.getSelectedRow() >= 0){
//             
//            conecta.executaSQL("DELETE FROM consumo WHERE MESA='"+jTableItens.getValueAt(row, 0).toString()+
//                                           "' AND NOMEFUNC_PRE='"+jTableItens.getValueAt(row, 1).toString()+
//                                              "' AND PROCOD_PRE='"+jTableItens.getValueAt(row, 2).toString()+
//                                              "' AND PRODES_PRE='"+jTableItens.getValueAt(row, 3).toString()+
//                                          "' AND QUANTIDADE_PRE='"+jTableItens.getValueAt(row, 5).toString()+
//                                              "'");
//            
//           
//           String valorSubtraidoString = jTableItens.getValueAt(row, 6).toString();
//            float valorSubtraido = Float.parseFloat(valorSubtraidoString.replace("R$ ", "").replace(",","."));
//            
//            
//            
//            subtotal = subtotal - valorSubtraido;
//            jLabelValorTotal.setText(NumberFormat.getCurrencyInstance().format(subtotal));
//            
//           
//            dtm.removeRow(jTableItens.getSelectedRow());
//            jTableItens.setModel(dtm);
//            
//        }else{
//            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
//        } 
//                 
//             }else{
//                 JOptionPane.showMessageDialog(null,"Cancelamento não permitido!");
//             }
                    
                    
                    
                    
                
            
          
            
         }
        
        
    }//GEN-LAST:event_jTableItensKeyPressed

    private void jListMostraDadosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMostraDadosMousePressed

        mostraPesquisa();
        jListMostraDados.setVisible(false);
        jTextFieldQtde.requestFocus();
        jButtonAddItem.setEnabled(true);
    }//GEN-LAST:event_jListMostraDadosMousePressed

    private void jTextFieldPesquisaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaNomeActionPerformed
        jListMostraDados.setVisible(false);
        enter=1;
    }//GEN-LAST:event_jTextFieldPesquisaNomeActionPerformed

    private void jTextFieldPesquisaNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaNomeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_F7){
            jButtonFecharPreVenda.doClick();

        }
        if(evt.getKeyCode() == KeyEvent.VK_F9){
                   jButtonImprimirComandaCozinha.doClick();
        } 
        if(evt.getKeyCode() == KeyEvent.VK_F10){
                   jButtonImprimirComandaCompleta.doClick();
        }
        if(evt.getKeyCode() == KeyEvent.VK_F11){
                   jButtonConferencia.doClick();
        }
        if(evt.getKeyCode() == KeyEvent.VK_F12){
                   jButtonImprimirComandaBalcao.doClick();
        }
    }//GEN-LAST:event_jTextFieldPesquisaNomeKeyPressed

    private void jTextFieldPesquisaNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaNomeKeyReleased
        if(enter==0)
        listaDePesquisa();
        else
        enter=0;
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jListMostraDados.requestFocus();

        }

    }//GEN-LAST:event_jTextFieldPesquisaNomeKeyReleased

    private void jListMostraDadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListMostraDadosKeyPressed
        
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            mostraPesquisa();
        jListMostraDados.setVisible(false);
        jTextFieldQtde.requestFocus();
        jButtonAddItem.setEnabled(true);

        }
         
    }//GEN-LAST:event_jListMostraDadosKeyPressed

    private void jButtonConferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConferenciaActionPerformed
        new RelatorioConferencia().setVisible(true);
    }//GEN-LAST:event_jButtonConferenciaActionPerformed

    private void jButtonImprimirComandaBalcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirComandaBalcaoActionPerformed
        int mesaEnviada=Integer.parseInt(jTextFieldCodMesa.getText());
        ImpressaoComandaBalcao impressaoComandaBalcao = new ImpressaoComandaBalcao(mesaEnviada);
        System.out.println(mesaEnviada);
    }//GEN-LAST:event_jButtonImprimirComandaBalcaoActionPerformed
    
    
     public void listaDePesquisa(){
         try {
        conecta.executaSQL("SELECT PROCOD, PRODES, proprc1 FROM PRODUTO WHERE prodes like '"+ jTextFieldPesquisaNome.getText()+"%' ORDER BY prodes");
        MODELO.removeAllElements();
        int v = 0;
       codig= new String[9];
            while (conecta.rs.next() & v < 9){
                MODELO.addElement(conecta.rs.getString("prodes"));
                codig[v]=conecta.rs.getString("procod");
                v++;
            }
            if (v>=1){
                jListMostraDados.setVisible(true);
            }else{
                jListMostraDados.setVisible(false);
            }
            resultadoPesquisa();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao mostrar lista: "+ ex);
        }
    }
    
    public void mostraPesquisa(){
        
        int linha = jListMostraDados.getSelectedIndex();
        if(linha>=0){
            conecta.executaSQL("SELECT PROCOD, PRODES, proprc1 FROM PRODUTO WHERE procod ='"+ codig[linha]+"'");
            
            resultadoPesquisa();
            
        }
    }
    public void resultadoPesquisa(){
        try {
            conecta.rs.first();
            jTextFieldProcod.setText(conecta.rs.getString("procod"));
            jLabelDescricaoProd.setText(conecta.rs.getString("prodes"));
            vlrUnit=conecta.rs.getString("proprc1");
            jTextFieldQtde.setText("1");
        } catch (SQLException ex) {
           //JOptionPane.showMessageDialog(rootPane,"Erro ao peencher os resultados"+ ex);
        }
    }
    
    public String ajustarSubtotal (float valorDaLinha, float valorSubtotal){
        
        float valorAjustado = valorSubtotal - valorDaLinha;
        
        
        return Float.toString(valorAjustado);
        
        }
    
     public void preencherTabela(String mesa, String funcionario, String procod, String prodes, String vlrUnit, String qtde, String total){
            
                 float vlrUnitFloat = Float.parseFloat(vlrUnit);
                 float vlrTotalFloat = Float.parseFloat(total);
                   
                 
                 Object[] dados = {mesa, funcionario, procod, prodes, NumberFormat.getCurrencyInstance().format(vlrUnitFloat), qtde,  NumberFormat.getCurrencyInstance().format(vlrTotalFloat)};
            DefaultTableModel modelo = (DefaultTableModel) jTableItens.getModel();
                 
                     modelo.addRow(dados);
                     
                  subtotal = subtotal + vlrTotalFloat;
                  jLabelValorTotal.setText(NumberFormat.getCurrencyInstance().format(subtotal));
                  
                   
                
           
        }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TerminalPreVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TerminalPreVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TerminalPreVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TerminalPreVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TerminalPreVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonConferencia;
    private javax.swing.JButton jButtonConsultarComanda;
    private javax.swing.JButton jButtonFecharPreVenda;
    private javax.swing.JButton jButtonImprimirComandaBalcao;
    private javax.swing.JButton jButtonImprimirComandaCompleta;
    private javax.swing.JButton jButtonImprimirComandaCozinha;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDescricaoMesa;
    private javax.swing.JLabel jLabelDescricaoProd;
    private javax.swing.JLabel jLabelNomeFunc;
    private javax.swing.JLabel jLabelValorTotal;
    private javax.swing.JList<String> jListMostraDados;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableItens;
    private javax.swing.JTextField jTextFieldCodMesa;
    private javax.swing.JTextField jTextFieldFuncod;
    private javax.swing.JTextField jTextFieldPesquisaNome;
    private javax.swing.JTextField jTextFieldProcod;
    private javax.swing.JTextField jTextFieldQtde;
    // End of variables declaration//GEN-END:variables
}
